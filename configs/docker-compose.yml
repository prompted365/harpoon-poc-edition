version: '3.8'

services:
  orchestrator:
    build: .
    ports:
      - "8080:8080"
    environment:
      # Logging
      - RUST_LOG=info,orchestrator=debug
      
      # HostedAI Configuration
      - ORCHESTRATOR__HOSTED_AI__BASE_URL=${HOSTED_AI_URL:-https://api.hosted.ai}
      - ORCHESTRATOR__HOSTED_AI__API_KEY=${HOSTED_AI_API_KEY}
      - ORCHESTRATOR__HOSTED_AI__POOL=${HOSTED_AI_POOL:-default}
      - ORCHESTRATOR__HOSTED_AI__OVERCOMMIT=${HOSTED_AI_OVERCOMMIT:-true}
      
      # GitHub Configuration (optional)
      - ORCHESTRATOR__GITHUB__TOKEN=${GITHUB_TOKEN}
      
      # Requesty/Anthropic Configuration
      - ORCHESTRATOR__AGENTS__REQUESTY_API_KEY=${REQUESTY_API_KEY}
      - ORCHESTRATOR__AGENTS__LLM_MODEL=${LLM_MODEL:-claude-3-5-sonnet-20240620}
      
    volumes:
      # Mount local config if needed
      - ${CONFIG_PATH:-./config.example.yaml}:/root/.orchestrator/config.yaml:ro
    
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Optional: Add Redis for distributed state
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

volumes:
  redis_data: